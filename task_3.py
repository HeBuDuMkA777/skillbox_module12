print('Задача 3. Апгрейд калькулятора')

# Степан использует калькулятор для расчёта суммы и разности чисел, но на работе ему требуются не только обычные арифметические действия.
# Он ничего не хочет делать вручную, поэтому решил немного расширить функциональность калькулятора.

# Что нужно сделать
# Напишите программу, запрашивающую у пользователя число и действие, которое нужно сделать с числом:
# вывести сумму его цифр, максимальную или минимальную цифру.
# Каждое действие оформите в виде отдельной функции, а основную программу зациклите.

# Запрошенные числа должны передаваться в функции суммы, максимума и минимума при помощи аргументов.

# Пример 1
# Введите число: 984
# Введите номер действия:
# 1 - сумма цифр
# 2 - максимальная цифра
# 3 - минимальная цифра: 1
# Сумма цифр: 21

# Пример 2
# Введите число: 546
# Введите номер действия:
# 1 - сумма цифр
# 2 - максимальная цифра
# 3 - минимальная цифра: 2
# Максимальная цифра: 6

# Пример 3
# Введите число: 741
# Введите номер действия:
# 1 - сумма цифр
# 2 - максимальная цифра
# 3 - минимальная цифра: 3
# Минимальная цифра: 1


def sum_number(number):
    result = 0
    for num in number:
        result += int(num)
    print(f'Сумма цифр: {result}')

def max_num(number):
    result = 0
    for num in number:
        if int(num) > result:
            result = int(num)
    print(f'Максимальная цифра: {result}')

def min_num(number):
    result = 9
    for num in number:
        if int(num) < result:
            result = int(num)
    print(f'Минимальная цифра: {result}')

while True:
    number = input("Введите число: ")
    func = int(input("Введите номер действия:\n1 - сумма цифр:\n2 - максимальная цифра:\n3 - минимальная цифра: "))
    if func == 1:
        sum_number(number)
    elif func == 2:
        max_num(number)
    elif func == 3:
        min_num(number)
    else:
        print("Неправильный номер действия, давайте все заново")